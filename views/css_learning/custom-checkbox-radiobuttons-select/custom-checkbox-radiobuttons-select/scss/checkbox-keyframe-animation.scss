$border: true;
$borderColor: green;
$borderRadius: 5px;
$borderThickness: 1px;

$hasBgColor: true;
$checkboxBgColor: #ccc; 

$hasHover: true;
$hoverBgColor: darken( $checkboxBgColor , 10%);

$checkedTickColor: red;
@if $border == true {
  $checkedTickColor: $borderColor;
}

/******* ANIMATION checked with css keyframes animation *****/

/***

 transition should be set on the original element that are you going to animate.
 Then target that element with :checked pseudo element;


***/

$fade-in-animate: false;
$fade-in-transition: opacity 4s ease;

$slide-in-animate: false;
$slide-in-transition: opacity 0.5s ease, top 0.5s ease, left 0.5s ease;


/*********************/



/*** mixins ***/

  @mixin hasBorder($border, $borderColor, $borderRadius, $borderThickness) {
    @if $border {
        border: $borderThickness solid $borderColor;
        border-radius: $borderRadius;
    } @else {
        border: none;
    }
  }

  @mixin hasBackgroundColor($hasBgColor, $checkboxBgColor) {
    @if $hasBgColor {
        background-color: $checkboxBgColor;
    } @else {
        background-color: transparent;
    }
  }

  @mixin hasBackgroundColor($hasHover, $hoverBgColor) {
    @if $hasHover {
        background-color: $hoverBgColor;
    }
  }

/*************/



/* The container */
label.container-checkbox-css-keyframes {
  display: table; //constrain size to the content
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  /*1. Hide the browser's default checkbox */
      input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        height: 0;
        width: 0;

          /* When the checkbox is checked */
          &:checked {
            /* add a blue background */
            & ~ .checkmark {

                 animation: shrink-bounce 200ms cubic-bezier(.4,.0,.23,1);

              /* Show the checkmark when checked */
              &:after {
                
                  //name | animation: duration | timing-function | delay | iteration-count | direction | fill-mode | play-state ;
                 animation: checkbox-check 125ms 200ms cubic-bezier(.4,.0,.23,1) forwards;
               
                
              }
            }
          }
      }
  /********/

/*********  2. Create a custom checkbox *************/

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  @include hasBackgroundColor($hasBgColor, $checkboxBgColor);
  @include  hasBorder($border, $borderColor, $borderRadius, $borderThickness);


      /* Create the checkmark/indicator (hidden when not checked) */
      &:after {
        content: "";
        position: absolute;
        opacity: 0; 
        @if $fade-in-animate==true {
           transition:$fade-in-transition;
        }
        
      
        /* Style the checkmark/indicator */

        //animate left and top;
        left: 8px;
        top: 8px;
        @if $slide-in-animate==true {
           transition:$slide-in-transition;
        }
        width: 5px;
        height: 10px;
        border: solid $checkedTickColor;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
      }
}

/* On mouse-over, add a grey background color but those not checked*/
&:hover input:not(:checked) {
  & ~ .checkmark {
     @include hasBackgroundColor($hasHover, $hoverBgColor)
  }
}

}


/********** define 2 keyframe animations ********************/

@keyframes shrink-bounce{
  0%{
    transform: scale(1);
  }
  33%{    
    transform: scale(.85);
  }
  100%{
    transform: scale(1);    
  }
}

@keyframes checkbox-check{
  0%{
    width: 0;
    height: 0;
    transform: translate3d(0,0,0) rotate(0deg);
  }
  33%{
    width: .2em;
    height: 0;
    transform: translate3d(0,-.5px,0) rotate(20deg);
  }
  100%{    
    width: .2em;    
    height: .5em;    
    opacity: 1;
    top: 4px;
    left: 8px;
    transform: translate3d(0,0,0) rotate(45deg);
  }
}

/*************************************/













