		

		1) intalled packages
			Package Control
			linejumper (allows to jump 10 lines at once with arrows)
			AdvancedNewFilePluging (quicly create files in directories);
			compare side-by-side (allows compare 2 files side by side)
			Babel (ES6 JSX syntax for files to pick javascript babel)
			ES-Lint Formater (ESLint formater with ESlint ) very usefull;
			Materialize (Theme controller)
			Side-bar Enhanecement
			Git-gutter (useufull plugin to see changes in git history by user);
			SublimeLinter-contrib-eslint_d (main package for eslinter globall)
			SublimeLinter (sublime framework for linting packages)
			SublimeLinter-csslint
			SublimeLinter-jshint
      SassBeautify (formats scss files after saving like (ESLint Formater);
      HTML-CSS-JS Prettify (amazig for formating any file extension , disable js formater since I am using ESLINT formater in package settings)
			Terminal (launch terminal from current project)
		2) All plugins usually comes with github intructions so follow them 
		3) Linting comes from ESLint very powerfull linter that could be (should) be 
		installed globally to work for every file edited. Globally means you need to intall in your root directory 
    so here: /Users/gilgrz where last one is your user name, create a package.json file by npm init -f (default) and install npm i eslint@latest , sublime will find your eslint here

      ESLINT setup

      IMPORTANT: eslint can be setup 
      locally (rules apply only to the specific directory) or 
      globally (rules apply to any directory that doesnt have .eslintrc set in your directory) so it uses global 
      rules (from home directory)

      Eslint traverse up the folder untill finds .eslintrc


		4) to make eslint work globally you need to set up this file in your home directory 
			.eslintrc This file can be initiate by eslint -init 
		5) make sure U got those npm pacakages installed globally for Sublime to lint all files 
				 ├── eslint@5.9.0
         └── eslint-plugin-react@7.11.1
      with that configuration U will get support for react linting in every directory , and this will work with your
      ESLint-formatter 
    6) let say you want to support, lint more features from eslint, thefore you can install eslint locally and change .eslinrc rules to apply for local files in your directory (where node_modeules are) so install that combination
        ├── eslint@4.19.1
        └── eslint-plugin-react@7.11.1
        └── babel-eslint@8.2.6
      we are installing locally babel-eslint cause we need extra features coming from babel linting as class-properties stage 3 that allows set classes with shorthands classproperty = 'something'
    6a) when U run you eslint --init locally make sure to add that line in .eslintrc
      "extends": "eslint:recommended",
      "parser": "babel-eslint",
      "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 2018,
        "sourceType": "module"
      },
      




					
